php artisan serve --host=0.0.0.0:8000/
php artisan make:auth
php artisan migrate
php artisan make:seeder UsersTableSeeder
php artisan db:seed

https://github.com/barryvdh/laravel-ide-helper
composer require barryvdh/laravel-ide-helper
Publicar Arquivos de Terceiros
php artisan vendor:publish --provider="Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider" --tag=config

composer require doctrine/dbal

php artisan make:model Category -m -c
php artisan make:seeder CategoriesTableSeeder

php artisan migrate:refresh --seed

php artisan make:controller CategoriesController --resource

php artisan route:list

https://laravelcollective.com/
composer require "laravelcollective/html":"^5.3.0"

php artisan make:request BookRequest

composer require patricktalmadge/bootstrapper:~5.9.1
http://bootstrapper.patrickrosemusic.co.uk/components
php artisan ide-helper:generate

composer require prettus/l5-repository
php artisan vendor:publish --provider="Prettus\Repository\Providers\RepositoryServiceProvider"

php artisan make:repository Book
php artisan make:entity Teste
php artisan make:bindings Book

Registrar no app.php
* Application Service Providers...
\App\Providers\RepositoryServiceProvider::class,

composer dumpautoload

php artisan make:criteria FindByAutor

git push -u origin master

git clone git@github.com:seuprojeto
cd seuprojeto
composer install --no-scripts
cp .env.example .env
php artisan key:generate
php artisan migrate --seed
composer dumpautoload


php artisan make:migration create_book_category_table --create=book_category

git push -u origin master
php artisan make:migration add_soft_delete_to_cateogries --table=categories

https://github.com/nWidart/laravel-modules
https://github.com/codeedu/laravel-modules
php artisan vendor:publish --provider="Nwidart\Modules\LaravelModulesServiceProvider"
php artisan module:make nome_modulo --plain
php artisan module:list
php artisan module:use CodeEduBook
php artisan module:route-provider

php artisan vendor:publish --provider="CodeEduUser\Providers\CodeEduUserServiceProvider" --tag=config --force

php artisan vendor:publish --tag=laravel-notifications
//publicação das views de reset de senha

 php artisan vendor:publish --provider="CodeEduUser\Providers\CodeEduUserServiceProvider" --tag=migrations

{!! Html::openFormGroup('user_id', $errors) !!}
{!! Form::label('user_id', 'Autor', ['class' => 'control-label']) !!}
{!! Form::text('user_id', null, ['class' => 'form-control']) !!}
{!! Form::error('user_id', $errors) !!}
{!! Html::closeFormGroup() !!}

        return [
            'title' => 'Título',
            'subtitle' => 'Sub-Título',
            'price' => 'Preço',
        ];

        return [

        ];




    public function rolesPermissions()
    {
        echo auth()->user()->name;
        echo "<br>";

        foreach(auth()->user()->roles as $role)
        {
            echo $role->name;
            echo "<br>";
            $permissions = $role->permissions;
            foreach($permissions as $permission)
            {
                echo $permission->name;
                echo "<br>";
            }
        }
    }



$  php artisan tinker
 Psy Shell v0.8.18 (PHP 7.1.6 — cli) by Justin Hileman
New version is available (current: v0.8.18, latest: v0.9.4)
>>> $user = \CodeEduUser\Models\User::find(1);
=> CodeEduUser\Models\User {#1092
     id: 1,
     name: "Aric Schimmel",
     email: "jorgitodf06@gmail.com",
     created_at: "2018-05-17 18:56:46",
     updated_at: "2018-05-18 12:30:33",
     verified: 1,
     verification_token: null,
     deleted_at: null,
   }
>>> $roleAdmin = \CodeEduUser\Models\Role::create(['name' => 'Admin']);
=> CodeEduUser\Models\Role {#1084
     name: "Admin",
     updated_at: "2018-05-23 17:16:09",
     created_at: "2018-05-23 17:16:09",
     id: 1,
   }
>>> $roleClient = \CodeEduUser\Models\Role::create(['name' => 'Client']);
=> CodeEduUser\Models\Role {#1067
     name: "Client",
     updated_at: "2018-05-23 17:16:29",
     created_at: "2018-05-23 17:16:29",
     id: 2,
   }
>>> $user->roles()->save($roleClient);
=> CodeEduUser\Models\Role {#1067
     name: "Client",
     updated_at: "2018-05-23 17:16:29",
     created_at: "2018-05-23 17:16:29",
     id: 2,
   }
>>> $user->roles;
=> Illuminate\Database\Eloquent\Collection {#1081
     all: [
       CodeEduUser\Models\Role {#1087
         id: 2,
         name: "Client",
         description: null,
         created_at: "2018-05-23 17:16:29",
         updated_at: "2018-05-23 17:16:29",
         pivot: Illuminate\Database\Eloquent\Relations\Pivot {#1090
           user_id: 1,
           role_id: 2,
         },
       },
     ],
   }
>>> $user->hasRole('Client');
$user->roles;


$  php artisan tinker
 Psy Shell v0.8.18 (PHP 7.1.6 — cli) by Justin Hileman
New version is available (current: v0.8.18, latest: v0.9.4)
>>> $user->hasRole('Client');
PHP Notice:  Undefined variable: user on line 1
>>> $user->roles;
PHP Notice:  Undefined variable: user on line 1
>>> $user = \CodeEduUser\Models\User::find(1);
=> CodeEduUser\Models\User {#1094
     id: 1,
     name: "Aric Schimmel",
     email: "jorgitodf06@gmail.com",
     created_at: "2018-05-17 18:56:46",
     updated_at: "2018-05-18 12:30:33",
     verified: 1,
     verification_token: null,
     deleted_at: null,
   }
>>> $user->roles;
=> Illuminate\Database\Eloquent\Collection {#1082
     all: [
       CodeEduUser\Models\Role {#1085
         id: 2,
         name: "Client",
         description: null,
         created_at: "2018-05-23 17:16:29",
         updated_at: "2018-05-23 17:16:29",
         pivot: Illuminate\Database\Eloquent\Relations\Pivot {#1086
           user_id: 1,
           role_id: 2,
         },
       },
     ],
   }
>>>  $user->hasRole('Client');
=> true
>>> $collection = new Illuminate\Database\Eloquent\Collection([$roleClient, $roleAdmin]);
PHP Notice:  Undefined variable: roleClient on line 1
>>> $roleAdmin = \CodeEduUser\Models\Role::create(['name' => 'Admin']);
=> CodeEduUser\Models\Role {#1092
     name: "Admin",
     updated_at: "2018-05-23 17:24:24",
     created_at: "2018-05-23 17:24:24",
     id: 3,
   }
>>> $roleClient = \CodeEduUser\Models\Role::create(['name' => 'Client']);
=> CodeEduUser\Models\Role {#1091
     name: "Client",
     updated_at: "2018-05-23 17:24:29",
     created_at: "2018-05-23 17:24:29",
     id: 4,
   }
>>> $collection = new Illuminate\Database\Eloquent\Collection([$roleClient, $roleAdmin]);
=> Illuminate\Database\Eloquent\Collection {#1098
     all: [
       CodeEduUser\Models\Role {#1091
         name: "Client",
         updated_at: "2018-05-23 17:24:29",
         created_at: "2018-05-23 17:24:29",
         id: 4,
       },
       CodeEduUser\Models\Role {#1092
         name: "Admin",
         updated_at: "2018-05-23 17:24:24",
         created_at: "2018-05-23 17:24:24",
         id: 3,
       },
     ],
   }
>>> $user->hasRole($collection);
=> 0
>>> $user->hasRole($collection);
=> 0
>>> $user->hasRole($collection);
=> 0
>>> $user->hasRole($collection);
=> 0
>>>